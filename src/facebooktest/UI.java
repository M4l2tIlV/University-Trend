/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package facebooktest;

import com.restfb.*;
import com.restfb.json.*;
import com.restfb.types.*;
import com.restfb.util.*;
import com.restfb.exception.*;
import javax.swing.JOptionPane;
import java.awt.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Student Lab
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        ShowData = new javax.swing.JButton();
        WriteData = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        freshman = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        senior = new javax.swing.JLabel();
        junior = new javax.swing.JLabel();
        sophomore = new javax.swing.JLabel();
        Fetch = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trend Facebook UI");

        jLabel1.setText("Get your access token from: https://developers.facebook.com/tools/explorer");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Access Token:");

        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        ShowData.setText("Show Data");
        ShowData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDataActionPerformed(evt);
            }
        });

        WriteData.setText("Write Data");
        WriteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WriteDataActionPerformed(evt);
            }
        });

        clear_button.setText("Clear Access Token");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO.", "Year", "Facebook Name", "Facebook ID", "Lastest Post", "Trend"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        freshman.setBackground(new java.awt.Color(0, 255, 51));
        freshman.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        freshman.setText("Freshman");
        freshman.setOpaque(true);

        jButton1.setText("Trend");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        senior.setBackground(new java.awt.Color(0, 255, 51));
        senior.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        senior.setText("Senior");
        senior.setOpaque(true);

        junior.setBackground(new java.awt.Color(0, 255, 51));
        junior.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        junior.setText("Junior");
        junior.setOpaque(true);

        sophomore.setBackground(new java.awt.Color(0, 255, 51));
        sophomore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sophomore.setText("Sophomore");
        sophomore.setOpaque(true);

        Fetch.setText("Fetch from file");
        Fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FetchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                                .addGap(35, 35, 35))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ShowData, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(WriteData, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Fetch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(clear_button))
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(freshman, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(junior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sophomore, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                                    .addComponent(senior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ShowData)
                            .addComponent(WriteData)
                            .addComponent(clear_button)
                            .addComponent(Fetch)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(freshman, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(sophomore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(junior, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(senior, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void ShowDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowDataActionPerformed
        try {
            String accessToken = jTextField1.getText();
            Facebook fb = Facebook.getFB(accessToken);

            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

            String filename = "friendlist.csv";

            Scanner sc = new Scanner(new File(filename));
            String line;
            String lineArr[];
            int i = 1;
            while (sc.hasNext()) {
                line = sc.nextLine();
                lineArr = line.split(",");

                String id = lineArr[1];
                String year = lineArr[2];
                User friend = fb.getFriend(id);
                //System.out.println("Debug: "+friend.getName());
                String name = friend.getName();

                Connection<Post> post = fb.getFeed(id, 1);
                if (post == null) {
                    continue;
                }
                String lastpost = post.getData().get(0).getMessage();

                //get trend score
                int score = 0;
                String trend = "happy";

                score = Trend.getTrendScore(lastpost);

                if (score < 0) {
                    trend = "sad";
                }

                model.addRow(new Object[]{i, year, name, id, lastpost, trend});
                i++;
            }

        } catch (FileNotFoundException e) {

        } catch (FacebookOAuthException e) {
            jTextField1.setText(null);
            String error = e.getErrorMessage();
            String ErrMes;
            if (error.contains("Invalid")) {
                ErrMes = "Invaild Access Token. Please insert again.";
            } else if (error.contains("expired")) {
                ErrMes = "Access Token is already expired. Please insert again.";
            } else {
                ErrMes = "Oopsss.. Some Error just happen!!";
            }
            JOptionPane.showMessageDialog(null, ErrMes,
                    "ERROR!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ShowDataActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        jTextField1.setText(null);
    }//GEN-LAST:event_clear_buttonActionPerformed

    private void WriteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WriteDataActionPerformed
        try {
            String accessToken = jTextField1.getText();
            Facebook fb = Facebook.getFB(accessToken);
            String filename = "friendlist.csv";
            StringBuilder sb = new StringBuilder("");
            Scanner in = new Scanner(new File(filename));
            String line;
            String lineArr[];

            while (in.hasNextLine()) {
                line = in.nextLine();
                lineArr = line.split(",");
                //System.out.println(line);
                String id = lineArr[1];
                String year = lineArr[2];
                User friend = fb.getFriend(id);
                String name = friend.getName();
                Connection<Post> post = fb.getFeed(id, 1);
                if (post == null) {
                    continue;
                }
                String lastpost = post.getData().get(0).getMessage();

                //get trend score
                int score = Trend.getTrendScore(lastpost);
                String trend = "happy";
                
                if (score < 0) {
                    trend = "sad";
                }
                
                if(lastpost != null && lastpost.contains(",")){
                    lastpost = lastpost.replaceAll(",", "");
                }
                sb.append(year).append(",").append(name).append(",").append(id).append(",").append(lastpost)
                        .append(",").append(trend).append(System.lineSeparator());

            }

            //Write in file
            Trend.writeFile("output.txt", sb);
            

        } catch (FacebookOAuthException e) {
            jTextField1.setText(null);
            String error = e.getErrorMessage();
            String ErrMes = null;
            if (error.contains("Invalid")) {
                ErrMes = "Invaild Access Token. Please insert again.";
            } else if (error.contains("expired")) {
                ErrMes = "Access Token is already expired. Please insert again.";
            } else {
                ErrMes = "Oopsss.. Some Error just happen!!";
            }
            JOptionPane.showMessageDialog(null, ErrMes,
                    "ERROR!", JOptionPane.ERROR_MESSAGE);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_WriteDataActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        StudentController cs = new StudentController();
        Color color1 = cs.getColorByYear("1");
        Color color2 = cs.getColorByYear("2");
        Color color3 = cs.getColorByYear("3");
        Color color4 = cs.getColorByYear("4");
        freshman.setBackground(color1);
        sophomore.setBackground(color2);
        junior.setBackground(color3);
        senior.setBackground(color4);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void FetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FetchActionPerformed
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            Scanner sc = new Scanner(new File("output.txt"));
            String line;
            String lineArr[];
            String year;
            String name;
            String id;
            String lastpost;
            String trend;
            StudentController cs = new StudentController();
            int num = 1;
            while(sc.hasNextLine()){
                line = sc.nextLine();
                lineArr = line.split(",");
                year = lineArr[0];
                name = lineArr[1];
                id = lineArr[2];
                lastpost = lineArr[3];
                cs.addNewStudent(lastpost,year);
                trend = lineArr[4];
                model.addRow(new Object[]{num,year,name,id,lastpost,trend});
                num++;
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_FetchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Fetch;
    private javax.swing.JButton ShowData;
    private javax.swing.JButton WriteData;
    private javax.swing.JButton clear_button;
    private javax.swing.JLabel freshman;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel junior;
    private javax.swing.JLabel senior;
    private javax.swing.JLabel sophomore;
    // End of variables declaration//GEN-END:variables
}
